<Window x:Class="VULauncher.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VULauncher"
        xmlns:controls="clr-namespace:VULauncher.Views.Controls"
        xmlns:viewModels="clr-namespace:VULauncher.ViewModels"
        xmlns:components="clr-namespace:VULauncher.Views.Components"
        xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
        xmlns:sfSkinManager="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF"
        xmlns:enums="clr-namespace:VULauncher.ViewModels.Enums"
        xmlns:consoles="clr-namespace:VULauncher.Views.Controls.Consoles"
        mc:Ignorable="d" Title="VU Launcher" Height="700" Width="1200" WindowStartupLocation="CenterScreen" Icon="Views/Icons/Logo-v3.ico">

    <Window.DataContext>
        <local:MainViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <DataTemplate DataType="{x:Type viewModels:SettingsViewModel}">
            <controls:SettingsControl/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModels:ConsolesViewModel}">
            <controls:ConsolesControl />
        </DataTemplate>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--<Grid.ColumnDefinitions>
            <ColumnDefinition Width="25"/>
            <ColumnDefinition Width="25"/>
            <ColumnDefinition Width="25"/>
            <ColumnDefinition Width="25"/>
            <ColumnDefinition Width="25"/>
            <ColumnDefinition Width="300"/>
            <ColumnDefinition Width="300*"/>
        </Grid.ColumnDefinitions>-->

        <ToolBar DockPanel.Dock="Top" AllowDrop="False" Grid.Row="0" Height="32" Background="White" >
            <ToggleButton IsChecked="{Binding ActiveViewType, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static enums:ActiveViewType.Console}}">
                <Image Source="Views/Icons/Console.ico" HorizontalAlignment="Center"/>
            </ToggleButton>

            <ToggleButton IsChecked="{Binding ActiveViewType, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static enums:ActiveViewType.Settings}}">
                <Image Source="Views/Icons/Settings.ico" HorizontalAlignment="Center"/>
            </ToggleButton>

            <Separator></Separator>

            <Button Command="{Binding SaveTabCommand}">
                <Image Source="Views/Icons/Save.ico" HorizontalAlignment="Center"/>
            </Button>

            <Button Command="{Binding SaveAllTabsCommand}">
                <Image Source="Views/Icons/SaveAll.ico" HorizontalAlignment="Center"/>
            </Button>

            <Button Command="{Binding DiscardChangesCommand}">
                <Image Source="Views/Icons/Undo_grey.ico" HorizontalAlignment="Center"/>
            </Button>

            <Separator></Separator>
            <components:LaunchComponent HorizontalAlignment="Left" 
                                        StartPresetCommand="{Binding StartClientPresetCommand}" 
                                        RestartPresetCommand="{Binding RestartClientPresetCommand}" 
                                        StopPresetCommand="{Binding StopClientPresetCommand}"
                                        ComboBoxItemsSource="{Binding ClientPresets, UpdateSourceTrigger=PropertyChanged}"
                                        ComboBoxSelectedItem="{Binding SelectedClientPreset, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>

            <Separator ></Separator>

            <components:LaunchComponent HorizontalAlignment="Left" 
                                        StartPresetCommand="{Binding StartServerPresetCommand}" 
                                        RestartPresetCommand="{Binding RestartServerPresetCommand}" 
                                        StopPresetCommand="{Binding StopServerPresetCommand}"
                                        ComboBoxItemsSource="{Binding ServerPresets, UpdateSourceTrigger=PropertyChanged}"
                                        ComboBoxSelectedItem="{Binding SelectedServerPreset, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
        </ToolBar>



        <!--<controls:ConsolesControl Grid.Row="1" Visibility="{Binding ActiveViewType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static enums:ActiveViewType.Console}}"/>
        <controls:SettingsControl Grid.Row="1" Visibility="{Binding ActiveViewType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static enums:ActiveViewType.Settings}}"/>-->

        <ContentControl Grid.Row="1" Content="{Binding CurrentViewModel}"/>

        <!--<syncfusion:DockingManager Grid.Row="1" Grid.Column="0" sfSkinManager:SfSkinManager.VisualStyle="Metro">
            <ContentControl x:Name="client" syncfusion:DockingManager.Header="VU Client" syncfusion:DockingManager.SideInDockedMode="Top"/>

            <ContentControl x:Name="server" syncfusion:DockingManager.Header="VU Server" syncfusion:DockingManager.SideInDockedMode="Bottom"/>
        </syncfusion:DockingManager>-->

        <!--<TabControl Grid.Column="0" Grid.Row="1" ItemsSource="{Binding TabViewModels, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="{Binding TabIndex, UpdateSourceTrigger=PropertyChanged}">
            <TabControl.Resources>
                <Style TargetType="TabItem" BasedOn="{StaticResource {x:Type TabItem}}">
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding TabHeaderName}" Style="{StaticResource TabItemTextBlockStyle}"/>
                                    <Label Content="*" FontWeight="Bold" Height="20" Padding="-5" Visibility="{Binding IsDirty, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                </StackPanel>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>
        </TabControl>-->
    </Grid>
</Window>
